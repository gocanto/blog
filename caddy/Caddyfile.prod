# Filename: caddy/Caddyfile.prod
# Caddy will automatically provision a Let's Encrypt certificate.

oullin.io {
	# Enable compression to reduce bandwidth usage.
	encode gzip zstd

	# Add security-related headers to protect against common attacks.
	# 	- Strict-Transport-Security: Enable HSTS to ensure browsers only connect via HTTPS.
	# 	- X-Frame-Options: Prevent clickjacking attacks.
	# 	- X-Content-Type-Options: Prevent content type sniffing.
	# 	- Referrer-Policy: Enhances user privacy.
	header {
		Strict-Transport-Security "max-age=31536000;"
		X-Frame-Options "SAMEORIGIN"
		X-Content-Type-Options "nosniff"
		Referrer-Policy "strict-origin-when-cross-origin"
	}

	log {
		output file /var/log/caddy/oullin.io.log {
			roll_size 10mb # Rotate logs after they reach 10MB
			roll_keep 5 # Keep the last 5 rotated log files
		}

		format json
	}

	# API handler.
	# 	- Reverse-proxy all requests to the Go API, forwarding Host + auth headers.
	#	- to: Tell Caddy which upstream to send to.
	#	- header_up: Preserve the original Host header.
	#	- header_up X-*: Forward the client headers.
	handle_path /api/* {
		reverse_proxy {
			to api:8080

			header_up Host {host}
			header_up X-API-Username {http.request.header.X-API-Username}
			header_up X-API-Key {http.request.header.X-API-Key}
			header_up X-API-Signature {http.request.header.X-API-Signature}

			transport http {
				dial_timeout 10s
				response_header_timeout 30s
			}
		}
	}

	# Default handler.
	# 	- Route all other traffic to the Vue frontend app.
	#	- `web_caddy_prod` is the Vue app's container name.
	# 	- source: https://github.com/oullin/web
	handle {
		reverse_proxy web_caddy_prod:80
	}
}
