networks:
    caddy_net:
        driver: bridge
    gocanto:
        name: gocanto
        driver: bridge

services:
        go-app:
            env_file:
                - .env
            build:
                context: .
                dockerfile: ./docker/dockerfile-api
                args:
                    - APP_VERSION=v1.0.0-release
                    - APP_HOST_PORT=${ENV_HTTP_PORT}
                    - APP_USER=${ENV_DOCKER_USER}
                    - APP_GROUP=${ENV_DOCKER_USER_GROUP}
            container_name: go_proxy_app
            restart: unless-stopped
            expose:
                - ${ENV_HTTP_PORT}
            networks:
                - caddy_net

        postgres:
            restart: always
            image: postgres:17.4
            container_name: gocanto-db
            env_file:
                - .env
            networks:
                - gocanto
            environment:
                # --- Postgres CLI env vars.
                PGUSER: ${ENV_DB_USER_NAME}
                PGDATABASE: ${ENV_DB_DATABASE_NAME}
                PGPASSWORD: ${ENV_DB_USER_PASSWORD}
                # --- Docker postgres-image env vars.
                POSTGRES_USER: ${ENV_DB_USER_NAME}
                POSTGRES_DB: ${ENV_DB_DATABASE_NAME}
                POSTGRES_PASSWORD: ${ENV_DB_USER_PASSWORD}
            ports:
                - "${ENV_DB_PORT}:${ENV_DB_PORT}"
            volumes:
                - ./database/infra/ssl/server.crt:/etc/ssl/certs/server.crt
                - ./database/infra/ssl/server.key:/etc/ssl/private/server.key
                - ./database/infra/data:/var/lib/postgresql/data
                - ./database/infra/config/postgresql.conf:/etc/postgresql/postgresql.conf
                - ./database/infra/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
            logging:
                driver: "json-file"
                options:
                    max-file: "20"
                    max-size: "10M"
            command: >
                postgres -c config_file=/etc/postgresql/postgresql.conf

            healthcheck:
                interval: 10s
                timeout: 5s
                retries: 5
                test: [
                    "CMD-SHELL",
                    "pg_isready",
                    "--username=${ENV_DB_USER_NAME}",
                    "--dbname=${ENV_DB_DATABASE_NAME}",
                    "--host=postgres",
                    "--port=${ENV_DB_PORT}",
                    "--version"
                ]
