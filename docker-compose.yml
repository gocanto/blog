networks:
  gocanto:
    name: gocanto
    driver: bridge

services:
  postgres:
    restart: always
    image: postgres:17.4
    container_name: gocanto-db
    env_file:
        - .env
    networks:
      - gocanto
    environment:
      # --- Postgres CLI env vars.
      PGUSER: ${ENV_DB_USER_NAME}
      PGDATABASE: ${ENV_DB_DATABASE_NAME}
      # --- Docker postgres-image env vars.
      POSTGRES_USER: ${ENV_DB_USER_NAME}
      POSTGRES_DB: ${ENV_DB_DATABASE_NAME}
      POSTGRES_PASSWORD: ${ENV_DB_USER_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
        - ./database/data:/var/lib/postgresql/data
        - ./database/ssl/server.crt:/etc/ssl/certs/server.crt:ro
        - ./database/ssl/server.key:/etc/ssl/private/server.key:ro
        - ./database/config/postgresql.conf:/etc/postgresql/postgresql.conf
        - ./database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

    logging:
      driver: "json-file"
      options:
        max-file: "20"
        max-size: "10M"

    command: >
        postgres -c config_file=/etc/postgresql/postgresql.conf

    healthcheck:
        interval: 10s
        timeout: 5s
        retries: 5
        test: [
            "CMD-SHELL",
            "pg_isready",
            "--username=${ENV_DB_USER_NAME}",
            "--dbname=${ENV_DB_DATABASE_NAME}",
            "--host=postgres",
            "--port=${ENV_DB_PORT}",
            "--version"
        ]
