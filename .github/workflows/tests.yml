name: Tests

on:
  pull_request:
    types: [ready_for_review, synchronize, labeled]

jobs:
  test:
    if: github.event.pull_request.draft == false ||
      (github.event.action == 'labeled' && github.event.label.name == 'testing')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24.5', '1.24.4']

    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: 'go-mod'

      - uses: actions/checkout@v4

      - name: Download Go modules
        run: go mod download

      - name: Run pkg tests
        run: |
          go test -coverpkg=./... ./pkg/... \
            -coverprofile=coverage-pkg-${{ matrix.go-version }}.out
          go tool cover -func=coverage-pkg-${{ matrix.go-version }}.out \
            | tail -n 1

      - name: Run boost & env tests
        run: |
          go test -coverpkg=./... ./boost ./env \
            -coverprofile=coverage-boost-env-${{ matrix.go-version }}.out
          go tool cover -func=coverage-boost-env-${{ matrix.go-version }}.out \
            | tail -n 1

      - name: Run handlers tests
        run: |
          go test -coverpkg=./... ./handler/... \
            -coverprofile=coverage-handler-${{ matrix.go-version }}.out
          go tool cover -func=coverage-handler-${{ matrix.go-version }}.out \
            | tail -n 1

      - name: Run database tests
        run: |
          go test -coverpkg=./... ./database/... \
            -coverprofile=coverage-database-${{ matrix.go-version }}.out
          go tool cover -func=coverage-database-${{ matrix.go-version }}.out \
            | tail -n 1

      - name: Merge coverage reports
        run: |
          echo "mode: set" > coverage-${{ matrix.go-version }}.out
          tail -q -n +2 coverage-*-${{ matrix.go-version }}.out \
            >> coverage-${{ matrix.go-version }}.out
          go tool cover -func=coverage-${{ matrix.go-version }}.out \
            | tail -n 1
